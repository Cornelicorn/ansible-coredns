---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ coredns_dependencies }}"

- name: Create the coredns group
  group:
    name: "{{ coredns_system_group }}"
    state: present
    system: true

- name: Create the coredns user
  user:
    name: "{{ coredns_system_user }}"
    groups: "{{ coredns_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: Download coredns binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/coredns/releases/download/v{{ coredns_version }}/coredns-{{ coredns_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/coredns-{{ coredns_version }}.linux-{{ go_arch }}.tar.gz"
    checksum: "sha256:{{ coredns_checksum }}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack coredns binary
  become: false
  unarchive:
    src: "/tmp/coredns-{{ coredns_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/coredns-{{ coredns_version }}.linux-{{ go_arch }}/"
    creates: "/tmp/coredns-{{ coredns_version }}.linux-{{ go_arch }}/coredns"
  delegate_to: localhost
  check_mode: false

- name: Create /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    mode: 0755

- name: Propagate coredns binaries
  copy:
    src: "/tmp/coredns-{{ coredns_version }}.linux-{{ go_arch }}/coredns"
    dest: "/usr/local/bin/coredns"
    mode: 0750
    owner: "{{ coredns_system_user }}"
    group: "{{ coredns_system_group }}"
  notify: restart coredns
  when: not ansible_check_mode

- name: Copy the Node Exporter systemd service file
  template:
    src: coredns.service.j2
    dest: /etc/systemd/system/coredns.service
    owner: root
    group: root
    mode: 0644
  notify: restart coredns
